{"name":"Gwframes","tagline":"Manipulate gravitational waveforms—changing frames, and so on.","body":"GWFrames\r\n========\r\nManipulate gravitational waveforms—changing frames, and so on.\r\n\r\nThe code in this project extends code written for the paper \"[Angular\r\nvelocity of gravitational radiation from precessing binaries and the\r\ncorotating frame](http://arxiv.org/abs/1302.2919)\", giving an explicit\r\nimplementation of the methods discussed in it.  The first commit of\r\nthis project is the last commit of the paper's project.\r\n\r\nThe license for using this software is basically open (see the LICENSE\r\nfile in this directory), though citations to the original paper are\r\nappreciated, where relevant.  Also, if your work depends on features\r\nfound in this module that have not been described in a separate\r\npublication of mine, I would appreciate the opportunity to be a\r\ncoauthor.\r\n\r\nNote that this code is not optimized.  In many cases, obvious\r\noptimizations were rejected in favor of clearer or simpler code, or\r\ncode that simply reflected the discussion in the paper more directly.\r\nThe code is generally more than fast enough for interactive use on\r\nindividual waveforms, but there is plenty of room for improvement.  In\r\nparticular, rotations may be painfully slow for large data sets.\r\n\r\n\r\nBuild requirements\r\n==================\r\nTo build just the C++ code:\r\n* C++ compiler\r\n* [GNU Scientific Library](http://www.gnu.org/software/gsl/), built as a shared library\r\n\r\nTo use the optional—but highly recommended—Python interface:\r\n* [SWIG](http://www.swig.org/) v2.0 or greater\r\n* [Python](http://www.python.org/getit/) v2.7.4 or greater (but not v3.*), with development headers (python-dev or similar)\r\n* [HDF5](http://www.hdfgroup.org/HDF5/) v1.8.10 or greater, built as a shared library with development headers (libhdf5-dev or similar)\r\n\r\nAnd the following, for which python's automatic installation utility\r\n[`pip`](http://www.pip-installer.org) can do all the work:\r\n* [NumPy](http://www.numpy.org/) v1.7 or greater (`pip install --user numpy`)\r\n* [Matplotlib](http://matplotlib.org/) v1.2 or greater (`pip install --user matplotlib`)\r\n* [h5py](http://code.google.com/p/h5py/) v2.1 or greater (`pip install --user h5py`)\r\n* [IPython](http://ipython.org/) v1.0 or greater, with notebook (`pip install --user ipython \\[notebook\\]`)\r\n\r\nN.B.: GSL, HDF5, and Python must all be compiled with the same\r\ncompiler.  In particular, if you are installing this on a cluster,\r\ncheck to ensure that the requirements are compiled with the same\r\ncompiler.\r\n\r\nAll of the above are reasonably standard, and can be installed easily\r\nthrough package managers such as apt and homebrew.  The notebook\r\ninterface for IPython provides an environment much like the\r\nMathematica notebook interface.  The examples are provided in a\r\nnotebook (*.ipynb) file.\r\n\r\n\r\nGetting started\r\n===============\r\nThe code is mostly in the form of C++, for speed.  All functions are\r\nprovided in the `GWFrames` namespace.  The interface is reasonably\r\nstraightforward, and can easily be included into and compiled with\r\nother code.  Look for examples of how to do this in the `C++Example`\r\ndirectory.  (See below for a few more details.)\r\n\r\n\r\nHowever, it is mostly intended to be used through the interface to\r\npython.  With the above-listed requirements, build the code and\r\ninstall to the user directory.  To do this, run `make` or\r\n\r\n    python setup.py install --user\r\n\r\nAfter this, you should be able to start a new python session (in any\r\ndirectory) and `import GWFrames`, which is the basic module provided\r\nby this code.  The primary objects are `Quaternion` and `Waveform`\r\nobjects, with various methods defined for each.  The IPython notebook\r\n`Docs/Documentation.ipynb` contains extensive examples, following the outline\r\nof the paper.  To use it, run\r\n\r\n    ipython notebook Documentation.ipynb --pylab\r\n\r\nAlternatively, this code may be used directly through its C++\r\ninterface.  A simple example is provided in the `C++Example`\r\ndirectory, along with the Makefiles needed to build all the necessary\r\ncode.  If it does not compile easily, make sure the various paths in\r\n_both_ Makefiles are set properly.\r\n\r\nDetailed documentation of most functions may be found through python's\r\n`help` function, or by running `make` in the `Docs` subdirectory, and\r\nreading `Docs/html/index.html`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}